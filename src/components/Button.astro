---
interface Props {
    classButton:string,
    sizeButton:string,
    className?:string,
    type:string,
    href?: string,
    download?:boolean,
    target?: string
};

const {classButton, sizeButton,className,href,download,type,target} = Astro.props as Props;

---

{classButton == 'primary' && sizeButton == 'lg' && type  == 'button'
    &&
    <button class={"transition inline-flex justify-center items-center text-center font-bold border-blue-600 hover:bg-blue-500 text-white hover:cursor-pointer w-auto px-10 py-4 rounded-full text-base bg-blue-600 not-[]:" + className}>
        <slot/>
    </button>
}
{classButton == 'primary' && sizeButton == 'lg' && type  == 'link'
    &&
    <a role="button" href={href} {...(download ? {download} : {})} target={target} class={"transition inline-flex justify-center items-center text-center font-bold border-blue-600 hover:bg-blue-500 text-white hover:cursor-pointer w-auto px-10 py-4 rounded-full text-base bg-blue-600 not-[]:" + className}>
        <slot/>
    </a>
}
{classButton == 'secondary' && sizeButton == 'md' && type  == 'button'
    &&
    <button type="button" class={"transition inline-flex justify-center items-center text-center font-bold border-gray-400 border-1 hover:bg-gray-200 dark:hover:bg-gray-500 hover:cursor-pointer w-auto px-4 py-1 rounded-full text-base text-gray-900 dark:text-white bg-gray-100 dark:bg-gray-600 " + className }>
        <slot/>
    </button>
}
{classButton == 'secondary' && sizeButton == 'md' && type  == 'link'
    &&
    <a role="button" href={href} {...(download ? {download} : {})} target={target} type="button" class={"transition inline-flex justify-center items-center text-center font-bold border-gray-400 border-1 hover:bg-gray-200 dark:hover:bg-gray-500 hover:cursor-pointer w-auto px-4 py-1 rounded-full text-base text-gray-900 dark:text-white bg-gray-100 dark:bg-gray-600 " + className }>
        <slot/>
    </a>
}


